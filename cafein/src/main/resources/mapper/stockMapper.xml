<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="StockDAO"> 


	<resultMap type="stock" id="stockMap">
	     <id column="ST_NUM" property="stNum"></id>
	     <result column="S_ID" property="sId" />
	     <result column="ST_NAME" property="stName" />
	     <result column="ST_QTY" property="stQty" />
	     <result column="ST_AQTY" property="stAqty" />
	     <result column="ST_PRICE" property="stPrice" />
	     <result column="CA_NUM" property="caNum" />
	     <result column="STAN_UNIT" property="stanUnit" />
	     <result column="ST_UNIT" property="stUnit" />
	     <result column="LACK_QTY" property="lackQty" />
	     <result column="ST_STATUS" property="stStatus" />
	     
	</resultMap>
   
   
  <select id="getStockList" resultMap="stockMap">
  	SELECT ST_NUM
  		,S_ID
		,ST_NAME
		,ST_QTY
		,ST_AQTY
		,ST_PRICE
		,CA_NUM
		,FIND_CODENM(CA_NUM) AS CANM 
		,STAN_UNIT
		,ST_STATUS
		,FIND_CODENM(ST_STATUS) AS STSTATUSNM
		,ST_UNIT
		,LACK_QTY
	FROM STOCK
	WHERE S_ID = #{sId}
  </select>	
  
   <select id="getStock" resultMap="stockMap">
  	SELECT 
		ST_NUM,
		S_ID,
		ST_NAME,
		ST_QTY,
		ST_AQTY,
		ST_PRICE,
		CA_NUM,
		STAN_UNIT,
		ST_UNIT,
		LACK_QTY,
		ST_STATUS
	FROM STOCK
	WHERE ST_NUM = #{stNum}
	AND S_ID = #{sId}
  </select>
  
  <insert id="insertStock" parameterType="stock">
  
  	INSERT INTO STOCK (ST_NUM,
					S_ID,
					ST_NAME,
					ST_QTY,
					ST_AQTY,
					ST_PRICE,
					CA_NUM,
					STAN_UNIT,
					ST_UNIT,
					LACK_QTY,
					ST_STATUS
					)
					
				VALUES (
					'ST'||LPAD(STOCK_SEQ.NEXTVAL,3,0),
					#{sId},
					#{stName},
					#{stQty},
					#{stAqty},
					#{stPrice},
					#{caNum},
					#{stanUnit},
					#{stUnit},
					#{lackQty},
					#{stStatus}
				)
  	</insert>
   
   <update id="updateStock" parameterType="stock">
      UPDATE stock
      <set>
         <if test="sId != null and sId != ''">s_id = #{sId},</if>
         <if test="stName != null and stName != ''">st_name = #{stName},</if>
         <if test="stQty != null and stQty != ''">st_qty = #{stQty},</if>
         <if test="stAqty != null and stAqty != ''">st_aqty = #{stAqty},</if>
         <if test="stPrice != null and stPrice != ''">st_price = #{stPrice},</if>
         <if test="caNum != null and caNum != ''">ca_num = #{caNum},</if>
         <if test="stanUnit != null and stanUnit != ''">stan_unit = #{stanUnit},</if>
         <if test="stUnit != null and stUnit != ''">st_unit = #{stUnit},</if>
         <if test="lackQty != null and lackQty != ''">lack_qty = #{lackQty},</if>
         <if test="stStatus != null and stStatus != ''">st_status = #{stStatus},</if>
            </set>
      WHERE st_num = #{stNum}
   </update>
   
	<delete id="deleteStock" parameterType="stock">
	      DELETE FROM Stock
	      <where>
	         <choose>
	            <when test="stNumList != null and stNumList.length>0">
	               st_num in
	               <foreach collection="stNumList" open="(" close=")"
	                  separator="," item="item">
	                  #{item}
	               </foreach>
	            </when>
	            <otherwise>
	               st_num = #{stNum}
	               
	            </otherwise>
	         </choose>
		</where>
	</delete>

	<update id="updateEnterQty" parameterType="stock">
		UPDATE STOCK 
		SET ST_QTY = ST_QTY + #{enterQty}
		WHERE S_ID = #{sId}
		AND ST_NUM = #{stNum}
	</update>
	
	<update id="updateEnterQtyProc" parameterType="stock" statementType="CALLABLE">
			{
				call STOCK_ENTERED(
					#{stNum, mode=IN,jdbcType=VARCHAR, javaType=string},
					#{enterQty, mode=IN, jdbcType=NUMERIC, javaType=java.lang.Integer},
					#{sId, mode=IN, jdbcType=VARCHAR, javaType=string}
					
				)
			}					
	
	</update>
		<!--재고삭제되면 레시피도 같이 삭제 -->
<!-- 	<delete id="deleteStockWith" parameterType="recipe"> -->
<!-- 	DELETE FROM RECIPE WHERE ST_NUM = #{stNum} -->
<!-- 	</delete> -->
	
	<!-- 재고 삭제를 위해 레시피에 존재여부 체크 -->
	<select id="checkStock" resultType="int" parameterType="stock">
	      SELECT COUNT(*) "recipeCnt"
	      FROM RECIPE
	      <where>
	         <choose>
	            <when test="stNumList != null and stNumList.length>0">
	               st_num in
	               <foreach collection="stNumList" open="(" close=")"
	                  separator="," item="item">
	                  #{item}
	               </foreach>
	            </when>
	            <otherwise>
	               st_num = #{stNum}
	               
	            </otherwise>
	         </choose>
		</where>
	</select>
</mapper>

 
 