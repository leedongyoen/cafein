<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CustomerOrderDAO">

	<select id="getOrderlist" parameterType="order" resultType="order">
	
		SELECT O.O_NUM
		      , O.C_ID
		      , O.O_DATE
		      , O.TOTAL
		      , O.RECEIPT
		      , O.S_ID
		      , S.S_NAME
		      , O.PAY_METHOD
		      , O.DELIVERY_STATUS
		      ,O.DELIVERY_STATUS
		      , CO.DETAIL_NM
		FROM ORDERS O JOIN STORE S
		ON O.S_ID = S.S_ID
		JOIN CONDITION CO
		ON O.DELIVERY_STATUS = CO.DETAIL_CD
		WHERE O.C_ID= #{cId}
		ORDER BY O.O_DATE DESC
	
	
	</select>
	
	<select id="getcustomeroderdetail" resultType="order">
		select S.S_NAME
				, O.TOTAL
				, O.RECEIPT
				, O.C_ADD
				, O.C_ADD3
				, O.PAY_METHOD
				, O.DELIVERY_STATUS
				, O.REFUSE_REASON
		from ORDERS O JOIN STORE S
		ON O.S_ID = S.S_ID
		where O_NUM=#{oNum}
	
	</select>
	
	<select id="getcustomerordermenudetail" resultType="orderdt">
		select DNUM.O_DNUM, ord.M_NUM,ord.OP_DNUM, RE.OP_NAME , ord.CA_NUM, m.M_NAME,ord.O_QTY
		from ORDER_DETAILS ord join menu m
		on ord.m_num = m.m_num
		JOIN RECIPE RE
		  ON ord.RECIPENO = RE.RECIPENO
		JOIN (
				  SELECT M_NUM,O_NUM, MIN(O_DNUM) O_DNUM
						  FROM ORDER_DETAILS
						  GROUP BY M_NUM,O_NUM
				) DNUM
		ON DNUM.M_NUM =  ord.M_NUM AND DNUM.O_NUM = ord.O_NUM AND DNUM.O_DNUM = ord.OP_DNUM
		where ord.O_NUM= #{oNum}
		      and ord.ca_num in ('CAOP','CAHT','CAIC','CADR','CADE','CAJP')
		order by DNUM.O_DNUM, ord.M_NUM,RE.OP_NAME 
	
	</select>


	<select id="getordernumber" parameterType="string" resultType="string">
		SELECT 'OR'||TO_CHAR(SYSDATE,'yymmdd')||LPAD(NVL(MAX(SUBSTR(O_NUM,9)),0)+1,3,0)
		FROM ORDERS
		WHERE O_NUM LIKE '%'||TO_CHAR(SYSDATE,'yymmdd')||'%'
	
	</select>
	
	<insert id="insertorder">
		<selectKey keyProperty="oNum" resultType="string" order="BEFORE">
				SELECT 'OR'||TO_CHAR(SYSDATE,'yymmdd')||LPAD(NVL(MAX(SUBSTR(O_NUM,9)),0)+1,3,0)
				FROM ORDERS
				WHERE O_NUM LIKE '%'||TO_CHAR(SYSDATE,'yymmdd')||'%'
		</selectKey>
	
		INSERT INTO ORDERS (	O_NUM
								, C_ID
								, O_DATE
								, TOTAL
								, RECEIPT
								, S_ID
								, PAY_METHOD
								, MILEAGE
								, C_ADD
								, C_ADD3
							)
		VALUES (
				#{oNum}
				, #{cId}
				, systimestamp
				, #{total}
				, #{receipt}
				, #{sId}
				, #{payMethod}
				, #{mileage}
				, #{cAdd}
				, #{cAdd3}
				)
	
	</insert>
	
	<select id="getorderrecipenolist" resultType="recipe">
	
		SELECT RECIPENO, CA_NUM
		FROM RECIPE
		WHERE M_NUM = #{mNum}
		    AND CA_NUM NOT IN ('CAOP')
	
	</select>

	<select id="mainOrderList"  resultType="order">
		SELECT SUM(O.TOTAL) TOTALS
		FROM ORDERS O JOIN STORE S
		ON O.S_ID = S.S_ID
		WHERE O.C_ID= #{cId}
	</select>
	
	<insert id="insertorderdetails" >
		INSERT INTO ORDER_DETAILS (
									O_DNUM
									, O_NUM
									, M_NUM
									, O_QTY
									, OP_DNUM
									, RECIPENO
									, CA_NUM
			
			)
			SELECT ORDER_D_SEQ.NEXTVAL, A.* FROM(
		<foreach collection="list" item="item" index="index" separator="UNION ALL " >
			 SELECT 				
				 #{item.oNum} AS O_NUM
				, #{item.mNum} AS M_NUM
				, #{item.oQty} AS O_QTY
				, 0 AS OP_DNUM
				, #{item.receipno} AS RECIPENO
				, #{item.caNum} AS CA_NUM
			FROM DUAL
			
		</foreach>) A
	</insert>


	<update id="getodnum">
		<selectKey keyProperty="opDnum" resultType="string" order="BEFORE">
			SELECT MIN(O_DNUM) OP_DNUM
			FROM ORDER_DETAILS
			WHERE O_NUM =#{oNum}
		</selectKey>
		
		UPDATE ORDER_DETAILS SET OP_DNUM=#{opDnum} 
		WHERE O_NUM= #{oNum}
	
	</update>
	
	<insert id="insertmileage">
		<selectKey keyProperty="addmileage" resultType="int" order="BEFORE">
		
			SELECT TOTAL*0.01
			FROM ORDERS
			WHERE O_NUM= #{oNum}
		
		</selectKey>
		
		INSERT INTO RESERVE(
							MILENUM
							, MILEAGE
							, S_ID
							, C_ID 
					)
		VALUES ( RESERVE_SEQ.NEXTVAL
				, #{addmileage}
				, #{sId}
				, #{cId}
				)
	
	</insert>
	
	
	<update id="updatemileage">
		<selectKey keyProperty="addmileage" resultType="int" order="BEFORE">
		
			SELECT TOTAL*0.01
			FROM ORDERS
			WHERE O_NUM= #{oNum}
		
		</selectKey>
		
		UPDATE RESERVE SET MILEAGE = MILEAGE + #{addmileage}
		WHERE S_ID= #{sId} 
				AND C_ID=#{cId}
	
	</update>
	
	<update id="setcanclemileage">
	
		<selectKey keyProperty="addcanclemileage" resultType="int" order="BEFORE">
		
			SELECT MILEAGE
			FROM ORDERS
			WHERE O_NUM= #{oNum}
		
		</selectKey>
		
		UPDATE RESERVE SET MILEAGE = MILEAGE - #{addcanclemileage}
		WHERE S_ID = #{sId} and C_ID=#{cId}
	
	</update>


	<update id="getodnum2">
		<selectKey keyProperty="opDnum" resultType="string" order="BEFORE">
			SELECT MIN(O_DNUM) OP_DNUM
			FROM ORDER_DETAILS
			WHERE O_NUM =#{oNum} and M_NUM =#{mNum}
		</selectKey>
		
		UPDATE ORDER_DETAILS SET OP_DNUM=#{opDnum} 
		WHERE O_NUM= #{oNum} and M_NUM =#{mNum}
	
	</update>




</mapper>